version: '3'

services:
  kibeu-development:
    build:
      context: ../../
      dockerfile: docker/development/Dockerfile
    image: kibeu-development
    ports:
      - '3000:3000'
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${HASURA_DB_PASSWORD}
  graphql-engine:
    image: hasura/graphql-engine:v2.16.1
    ports:
      - '8080:8080'
    depends_on:
      - 'postgres'
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:${HASURA_DB_PASSWORD}@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:${HASURA_DB_PASSWORD}@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'false' # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
      # uncomment for enabling jwt,
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
      # HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "v276RB2c1JnJtyuj/KinJYJHtwvIncc2phz1oAv0XVI=" }'
      HASURA_GRAPHQL_ENABLE_TELEMETRY: 'false'
volumes:
  db_data:
